version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ufbank-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    networks:
      - ufbank-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 3s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ufbank-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/next.config.js:/app/next.config.js
      - ./frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ./frontend/postcss.config.js:/app/postcss.config.js
      - ./frontend/tsconfig.json:/app/tsconfig.json
    depends_on:
      - backend
    networks:
      - ufbank-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: ufbank-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend
    environment:
      - LOKI_HOST=http://loki:3100
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    networks:
      - ufbank-network
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: ufbank-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ufbank-network
    restart: unless-stopped

  ledger-service:
    build:
      context: ./ledger-service
      dockerfile: Dockerfile
    container_name: ufbank-ledger
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - LOKI_HOST=http://loki:3100
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    networks:
      - ufbank-network
    restart: unless-stopped

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: ufbank-notification
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - LOKI_HOST=http://loki:3100
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
    networks:
      - ufbank-network
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: ufbank-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # otlp grpc
      - "4318:4318"    # otlp http
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - ufbank-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: ufbank-grafana
    ports:
      - "9091:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - loki
      - jaeger
    networks:
      - ufbank-network
    restart: unless-stopped

networks:
  ufbank-network:
    driver: bridge

volumes:
  grafana-data:

